<!-- Description of the build process:


validate 	
initialize 				-Read domibus.properties from domibus-config/domibus.properties using properties-maven-plugin.
							Those values will be filtered later into the server configuration. 
generate-sources 	
process-sources 	
generate-resources 		-domibus-config is copied to target/domibus-config
						-src/main/modules of the domibus modules are copied to target/${project.build.finalName}/WEB-INF/modules
						-project resources (i.e. persistence.xml) are filtered 


process-resources 	
compile 	
process-classes 	
generate-test-sources 	
process-test-sources 	-test resources (i.e. src/test/resources/META-INF/persistence.xml) are filtered.
generate-test-resources 
process-test-resources 	
test-compile 	
process-test-classes 	
test 					-unit tests not matching *IntegrationTest.java are executed
prepare-package 	
package 	
pre-integration-test 	-read build.properties from domibus-config/build.properties using properties-maven-plugin.
							Values defined here are overriding values defined in domibus.properties for the purpose of integration testing.
						-copy filtered domibus-config to tatget/domibus-integration/config
						-database scripts are generated using hibernate3-maven-plugin. The persistence.xml located in 
							src/test/resources/META-INF is used for this.
						-2 derby databases are started using derby-maven-plugin
						-the generated derby script is imported into the database using sql-maven-plugin
						-2 instances of tomcat are set up using integration-test-config, packaged and started
						
						
integration-test 		-soap ui integration tests are executed
post-integration-test 	-tomcats are shut down
                        -derby databases are shut down
verify 					-if the jenkins profile is activated all configured assemblies are built, using the properties set in domibus.properties
install 	
deploy 					-deployment is made to ecodex-nexus, deployer credentials are required



profiles:

integration-tests-and-package:
The build server profile. Generates assemblies

options:
 -DskipIntegrationTestingAndPackaging : disable the packaging and testing, only build the war

!!!! WARNING !!! To avoid a OutOfMemoryError, it's best to set '-Xmx512m -XX:MaxPermSize=256m' as VM args


 -->


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>eu.domibus</groupId>
        <artifactId>domibus</artifactId>
        <version>2.1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>domibus-distribution</artifactId>
    <name>domibus Distribution</name>
    <packaging>war</packaging>
    <properties>
        <prefix.jndi>java:comp/env/</prefix.jndi>
        <gateway.server.db.initial>${project.build.directory}/sql/hibernate3/domibus_derby_initial.sql</gateway.server.db.initial>
        <domibus.testing.default.config.file>${project.parent.basedir}/domibus-config/domibus.properties</domibus.testing.default.config.file>
        <gateway.server.sending.db.port>1527</gateway.server.sending.db.port>
        <gateway.server.receiving.db.port>1529</gateway.server.receiving.db.port>
        <derby.version>10.10.1.1</derby.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-spring</artifactId>
            <version>1.6.2</version>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>net.timewalker</groupId>-->
            <!--<artifactId>ffmq</artifactId>-->
            <!--<version>3.0.5</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
            <version>2.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-ssl</groupId>
            <artifactId>commons-ssl</artifactId>
            <version>0.3.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-jaxws</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-saaj</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-transport-http</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-c3p0</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.opensymphony.quartz</groupId>
            <artifactId>quartz</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-all</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.simpleframework</groupId>
            <artifactId>simple-xml</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>stax</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.neethi</groupId>
            <artifactId>neethi</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.rampart</groupId>
            <artifactId>rampart-dist</artifactId>
            <type>pom</type>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.xalan</groupId>
                    <artifactId>xalan</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>bouncycastle</groupId>
                    <artifactId>bcprov-jdk15</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ca.juliusdavies</groupId>
                    <artifactId>not-yet-commons-ssl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <artifactId>xercesImpl</artifactId>
            <groupId>xerces</groupId>
            <version>2.10.0</version>
        </dependency>
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.ws.commons.axiom</groupId>
            <artifactId>axiom-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.ws.commons.axiom</groupId>
            <artifactId>axiom-dom</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.axis2</groupId>
            <artifactId>axis2-transport-local</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eu.domibus</groupId>
            <artifactId>domibus-common</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eu.domibus</groupId>
            <artifactId>domibus-logging</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eu.domibus</groupId>
            <artifactId>domibus-ebms3</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eu.domibus</groupId>
            <artifactId>domibus-security</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eu.domibus</groupId>
            <artifactId>domibus-submission</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>${derby.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.2.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>integration-tests-and-package</id>
            <activation>
                <property>
                    <!-- use this option to disable integration testing and packaging -->
                    <name>!skipIntegrationTestingAndPackaging</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- this plugin launches two instances derby database on two differente ports (one for receiving and sending) -->
                    <plugin>
                        <groupId>org.carlspring.maven</groupId>
                        <artifactId>derby-maven-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>start-derby-sending</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <port>${gateway.server.sending.db.port}</port>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-derby-sending</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <port>${gateway.server.sending.db.port}</port>
                                </configuration>
                            </execution>
                            <execution>
                                <id>start-derby-receiving</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <port>${gateway.server.receiving.db.port}</port>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-derby-receiving</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <port>${gateway.server.receiving.db.port}</port>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- this plugin executes the SQL creation script on both derby instances -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.derby</groupId>
                                <artifactId>derbyclient</artifactId>
                                <version>${derby.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>creation-sql-script-sending</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${gateway.server.db.initial}</srcFile>
                                    </srcFiles>
                                    <onError>continue</onError>
                                    <username>${domibus.persistence.user}</username>
                                    <password>${domibus.persistence.password}</password>
                                    <driver>${domibus.persistence.driverClassName}</driver>
                                    <url>${domibus.persistence.url}</url>
                                </configuration>
                            </execution>
                            <execution>
                                <id>creation-sql-script-receiving</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${gateway.server.db.initial}</srcFile>
                                    </srcFiles>
                                    <onError>continue</onError>
                                    <username>${domibus.persistence.user}</username>
                                    <password>${domibus.persistence.password}</password>
                                    <driver>${domibus.persistence.driverClassName}</driver>
                                    <url>${domibus.persistence.testing.url}</url>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.4.10</version>
                        <configuration>
                            <container>
                                <containerId>tomcat8x</containerId>
                                <zipUrlInstaller>
                                    <url>https://joinup.ec.europa.eu/nexus/content/groups/public/org/apache/tomcat/tomcat/8.0.15/tomcat-8.0.15.zip</url>
                                </zipUrlInstaller>
                                <dependencies>
                                    <dependency>
                                        <groupId>org.apache.derby</groupId>
                                        <artifactId>derbyclient</artifactId>
                                    </dependency>
                                </dependencies>
                            </container>
                            <deployables>
                                <deployable>
                                    <properties>
                                        <context>domibus</context>
                                    </properties>
                                </deployable>
                            </deployables>
                            <packager>
                                <outputLocation>${project.build.directory}/artifacts/tomcat</outputLocation>
                            </packager>
                        </configuration>
                        <executions>
                            <execution>
                                <id>configure-sending-domibus</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <configuration>
                                        <properties>
                                            <cargo.servlet.port>${domibus.module.ebms3.MSH.pt}</cargo.servlet.port>
                                            <cargo.tomcat.ajp.port>${tomcat.ajp.pt}</cargo.tomcat.ajp.port>
                                            <cargo.rmi.port>${tomcat.rmi.pt}</cargo.rmi.port>
                                            <domibus.persistence.url>${domibus.persistence.url}</domibus.persistence.url>
                                            <domibus.persistence.user>${domibus.persistence.user}</domibus.persistence.user>
                                            <domibus.persistence.password>${domibus.persistence.user}</domibus.persistence.password>
                                            <domibus.persistence.driverClassName>${domibus.persistence.driverClassName}</domibus.persistence.driverClassName>
                                        </properties>
                                        <files>
                                            <file>
                                                <file>
                                                    ${project.basedir}/src/test/resources/domibus-integration-test-server-config/tomcat/conf/Catalina/localhost/domibus.xml
                                                </file>
                                                <tofile>domibus.xml</tofile>
                                                <todir>conf/Catalina/localhost</todir>
                                                <configfile>true</configfile>
                                                <overwrite>true</overwrite>
                                            </file>
                                        </files>
                                        <home>${project.build.directory}/sending-domibus</home>
                                    </configuration>
                                </configuration>
                                <goals>
                                    <goal>configure</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-sending-domibus</id>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <configuration>
                                        <properties>
                                            <cargo.servlet.port>${domibus.module.ebms3.MSH.pt}</cargo.servlet.port>
                                            <cargo.tomcat.ajp.port>${tomcat.ajp.pt}</cargo.tomcat.ajp.port>
                                            <cargo.rmi.port>${tomcat.rmi.pt}</cargo.rmi.port>
                                        </properties>
                                        <home>${project.build.directory}/sending-domibus</home>
                                    </configuration>
                                </configuration>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>start-sending-domibus</id>
                                <phase>integration-test</phase>
                                <configuration>
                                    <configuration>
                                        <type>existing</type>
                                        <properties>
                                            <cargo.servlet.port>${domibus.module.ebms3.MSH.pt}</cargo.servlet.port>
                                        </properties>
                                        <home>${project.build.directory}/sending-domibus</home>
                                    </configuration>
                                </configuration>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>configure-packaging-server</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>configure</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>package-server</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <configuration>
                                    <configuration>
                                        <home>${project.build.directory}/sending-domibus</home>
                                    </configuration>
                                    <packager>
                                        <outputLocation>${project.build.directory}/artifacts/tomcat</outputLocation>
                                    </packager>
                                </configuration>
                            </execution>
                            <execution>
                                <id>configure-receiving-domibus</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <configuration>
                                        <properties>
                                            <cargo.servlet.port>${domibus.testing.MSH.pt}</cargo.servlet.port>
                                            <cargo.tomcat.ajp.port>${tomcat.testing.ajp.pt}</cargo.tomcat.ajp.port>
                                            <cargo.rmi.port>${tomcat.testing.rmi.pt}</cargo.rmi.port>
                                            <domibus.persistence.url>${domibus.persistence.testing.url}</domibus.persistence.url>
                                            <domibus.persistence.user>${domibus.persistence.user}</domibus.persistence.user>
                                            <domibus.persistence.password>${domibus.persistence.user}</domibus.persistence.password>
                                            <domibus.persistence.driverClassName>${domibus.persistence.driverClassName}</domibus.persistence.driverClassName>
                                        </properties>
                                        <files>
                                            <file>
                                                <file>
                                                    ${project.basedir}/src/test/resources/domibus-integration-test-server-config/tomcat/conf/Catalina/localhost/domibus.xml
                                                </file>
                                                <tofile>domibus.xml</tofile>
                                                <todir>conf/Catalina/localhost</todir>
                                                <configfile>true</configfile>
                                                <overwrite>true</overwrite>
                                            </file>
                                        </files>
                                        <home>${project.build.directory}/receiving-domibus</home>
                                    </configuration>
                                </configuration>
                                <goals>
                                    <goal>configure</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-receiving-domibus</id>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <configuration>
                                        <properties>
                                            <cargo.servlet.port>${domibus.testing.MSH.pt}</cargo.servlet.port>
                                            <cargo.tomcat.ajp.port>${tomcat.testing.ajp.pt}</cargo.tomcat.ajp.port>
                                            <cargo.rmi.port>${tomcat.testing.rmi.pt}</cargo.rmi.port>
                                        </properties>
                                        <home>${project.build.directory}/receiving-domibus</home>
                                    </configuration>
                                </configuration>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>start-receiving-domibus</id>
                                <phase>integration-test</phase>
                                <configuration>
                                    <configuration>
                                        <type>existing</type>
                                        <properties>
                                            <cargo.servlet.port>${domibus.testing.MSH.pt}</cargo.servlet.port>
                                        </properties>
                                        <home>${project.build.directory}/receiving-domibus</home>
                                    </configuration>
                                </configuration>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <configuration>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>@*@</delimiter>
                            </delimiters>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtensions>jks</nonFilteredFileExtensions>
                                <nonFilteredFileExtensions>mar</nonFilteredFileExtensions>
                                <nonFilteredFileExtensions>aar</nonFilteredFileExtensions>
                                <nonFilteredFileExtensions>sql</nonFilteredFileExtensions>
                                <nonFilteredFileExtensions>ddl</nonFilteredFileExtensions>
                            </nonFilteredFileExtensions>
                            <encoding>UTF-8</encoding>
                        </configuration>
                        <executions>
                            <execution>
                                <id>copy-modules</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/modules
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>../domibus-submission/src/main/modules</directory>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                        <resource>
                                            <directory>../domibus-ebms3/src/main/modules</directory>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                        <resource>
                                            <directory>../domibus-security/src/main/modules</directory>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                        <resource>
                                            <directory>../domibus-logging/src/main/modules</directory>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-sending-domibus-tomcat</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/sending-domibus</outputDirectory>
                                    <overwrite>false</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.build.testOutputDirectory}/domibus-integration-test-server-config/tomcat
                                            </directory>
                                            <filtering>true</filtering>
                                            <excludes>
                                                <exclude>**/domibus.xml</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-sending-domibus-store</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/sending-domibus/store</outputDirectory>
                                    <overwrite>false</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.build.testOutputDirectory}/domibus-integration-test-server-config/store
                                            </directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-receiving-domibus-tomcat</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/receiving-domibus</outputDirectory>
                                    <overwrite>false</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.build.testOutputDirectory}/domibus-integration-test-server-config/tomcat
                                            </directory>
                                            <filtering>false</filtering>
                                            <excludes>
                                                <exclude>**/domibus.xml</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-receiving-domibus-store</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/receiving-domibus/store</outputDirectory>
                                    <overwrite>false</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.build.testOutputDirectory}/domibus-integration-test-server-config/store
                                            </directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.smartbear.soapui</groupId>
                        <artifactId>soapui-maven-plugin</artifactId>
                        <version>5.0.0</version>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <outputFolder>${project.build.directory}/soapui-reports</outputFolder>
                                    <junitReport>true</junitReport>
                                    <printReport>true</printReport>
                                    <projectFile>${project.basedir}/src/test/resources/soapui_testsuites/e-CODEXBackendServiceTestSuite.xml</projectFile>
                                    <projectProperties>
                                        <value>ServiceEndpoint_1_1_sending=${domibus.module.ebms3.MSH.host}:${domibus.module.ebms3.MSH.pt}/domibus/services/BackendService_1_1</value>
                                        <value>ServiceEndpoint_1_1_receiving=${domibus.testing.MSH.host}:${domibus.testing.MSH.pt}/domibus/services/BackendService_1_1</value>
                                    </projectProperties>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.derby</groupId>
                                <artifactId>derbyclient</artifactId>
                                <version>${derby.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <configuration>
                                    <target>
                                        <replace
                                                file="${project.build.directory}/artifacts/tomcat/conf/server.xml"
                                                token='Host appBase="webapps" autoDeploy="true" name="localhost"'
                                                value='Host appBase="webapps" autoDeploy="false" name="localhost"' />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/tomcat-full.xml</descriptor>
                                <descriptor>src/main/assembly/tomcat-configuration-only.xml</descriptor>
                                <descriptor>src/main/assembly/sql-scripts.xml</descriptor>
                                <descriptor>src/main/assembly/war-with-configfiles.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <!-- bound to verify because we need to execute cargo-package first
                                    which is in post-integration-test -->
                                <phase>verify</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <finalName>domibus</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <id>read-build-properties</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.parent.basedir}/domibus-config/domibus.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>mar</nonFilteredFileExtension>
                        <nonFilteredFileExtension>aar</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                    <recompressZippedFiles>false</recompressZippedFiles>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <hibernatetool>
                        <classpath>
                            <path location="${project.build.directory}/test-classes/"/>
                        </classpath>
                        <jpaconfiguration persistenceunit="generatePU"/>
                        <hbm2ddl create="true" export="false" drop="true"
                                 outputfilename="configuration.sql" format="true" console="true"/>
                    </hibernatetool>
                </configuration>
                <dependencies>
                    <!--We are using the hibernate3 plugin and thus need the old hibernate3-->
                    <!--dependencies-->
                    <dependency>
                        <groupId>org.hibernate.javax.persistence</groupId>
                        <artifactId>hibernate-jpa-2.0-api</artifactId>
                        <version>1.0.0.Final</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-tools</artifactId>
                        <version>3.2.4.GA</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-entitymanager</artifactId>
                        <version>3.6.10.Final</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-core</artifactId>
                        <version>3.6.10.Final</version>
                    </dependency>
                    <dependency>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                        <version>1.2.14</version>
                    </dependency>
                    <dependency>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>generate-derby-sql</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <hibernatetool>
                                <jpaconfiguration persistenceunit="generateDerbyPU"/>
                                <hbm2ddl create="true" export="false" drop="false"
                                         outputfilename="domibus_derby_initial.sql" format="true"
                                         console="false"/>
                            </hibernatetool>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-mysql-sql</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <hibernatetool>
                                <jpaconfiguration persistenceunit="generateMySqlPU"/>
                                <hbm2ddl create="true" export="false" drop="false"
                                         outputfilename="domibus_mysql_initial.sql" format="true"
                                         console="false"/>
                            </hibernatetool>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-oracle-sql</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <hibernatetool>
                                <jpaconfiguration persistenceunit="generateOraclePU"/>
                                <hbm2ddl create="true" export="false" drop="false"
                                         outputfilename="domibus_oracle_initial.sql" format="true"
                                         console="false"/>
                            </hibernatetool>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>