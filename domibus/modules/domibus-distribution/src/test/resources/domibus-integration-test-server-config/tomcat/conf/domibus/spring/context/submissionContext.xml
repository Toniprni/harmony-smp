<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <!--    WEBSERVICE CONFIGURATION    -->

    <bean id="ebMessageValidator" class="eu.eCODEX.submission.validation.impl.EbMessageValidator"/>
    <bean id="sendMessageValidator" class="eu.eCODEX.submission.validation.impl.SendMessageValidator"/>
    <bean id="downloadMessageValidator" class="eu.eCODEX.submission.validation.impl.DownloadMessageValidator"/>

    <bean id="messageTransformer"
          class="eu.eCODEX.submission.transformer.impl.BackendInterfaceMessageTransformer">
        <property name="preRetrievalValidator" ref="ebMessageValidator"/>
        <property name="preSubmissionValidator" ref="sendMessageValidator"/>
        <property name="postRetrievalValidator" ref="downloadMessageValidator"/>
        <property name="postSubmissionValidator" ref="ebMessageValidator"/>
    </bean>

    <bean id="messageHandler" class="eu.eCODEX.submission.handler.impl.DbMessageHandler">
        <property name="messageRetrievalTransformer" ref="messageTransformer"/>
        <property name="messageSubmissionTransformer" ref="messageTransformer"/>
    </bean>


    <bean id="backendWebservice" class="eu.eCODEX.submission.original.service.BackendServiceImpl">
        <property name="messageRetriever" ref="messageHandler"/>
        <property name="messageSubmitter" ref="messageHandler"/>
    </bean>

    <!-- JMS SERVICE CONFIGURATION -->


    <!-- DISABLED BY DEFAULT
        <bean id="JMSConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="factory/ConnectionFactory"/>
            <property name="jndiEnvironment">
                <props>
                    <prop key="java.naming.factory.initial">net.timewalker.ffmq3.jndi.FFMQInitialContextFactory</prop>
                    <prop key="java.naming.provider.url">tcp://localhost:10002</prop>
                </props>
            </property>
        </bean>

        <bean id="inQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="queue/inQueue"/>
            <property name="jndiEnvironment">
                <props>
                    <prop key="java.naming.factory.initial">net.timewalker.ffmq3.jndi.FFMQInitialContextFactory</prop>
                </props>
            </property>
        </bean>

        <bean id="outQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="queue/outQueue"/>
            <property name="jndiEnvironment">
                <props>
                    <prop key="java.naming.factory.initial">net.timewalker.ffmq3.jndi.FFMQInitialContextFactory</prop>
                </props>
            </property>
        </bean>

        <bean id="recievingQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="queue/recievingQueue"/>
            <property name="jndiEnvironment">
                <props>
                    <prop key="java.naming.factory.initial">net.timewalker.ffmq3.jndi.FFMQInitialContextFactory</prop>
                </props>
            </property>
        </bean>

        <bean id="messageListener" class="eu.eCODEX.submission.jms.QueueListener">
            <property name="messageSubmitter" ref="messageJMSHandler"/>
            <property name="connectionFactory" ref="JMSConnectionFactory"/>
            <property name="outQueue" ref="outQueue"/>
        </bean>

        <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
            <property name="connectionFactory" ref="JMSConnectionFactory"/>
            <property name="destination" ref="inQueue"/>
            <property name="messageListener" ref="messageListener"/>
        </bean>

        <bean id="messageJMSTransformer"
              class="eu.eCODEX.submission.transformer.impl.JMSMessageTransformer">
            <property name="preRetrievalValidator" ref="ebMessageValidator"/>
            <property name="preSubmissionValidator" ref="sendMessageValidator"/>
            <property name="postRetrievalValidator" ref="downloadMessageValidator"/>
            <property name="postSubmissionValidator" ref="ebMessageValidator"/>
        </bean>

        <bean id="messageJMSHandler" class="eu.eCODEX.submission.handler.impl.DbMessageHandler">
            <property name="messageRetrievalTransformer" ref="messageJMSTransformer"/>
            <property name="messageSubmissionTransformer" ref="messageJMSTransformer"/>
        </bean>

        &lt;!&ndash; configure the sending job &ndash;&gt;
        <bean name="queueMessageSenderJob" class="org.springframework.scheduling.quartz.JobDetailBean">
            <property name="jobClass" value="eu.eCODEX.submission.jms.QueueMessageSender"/>
            <property name="jobDataAsMap">
                <map>
                    <entry key="messageRetriever" value-ref="messageJMSHandler"/>
                    <entry key="connectionFactory" value-ref="JMSConnectionFactory"/>
                    <entry key="receivingQueue" value-ref="recievingQueue"/>
                </map>
            </property>
        </bean>

        &lt;!&ndash; configure the job trigger &ndash;&gt;
        <bean id="queueMessageSenderJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
            &lt;!&ndash; see the example of method invoking job above &ndash;&gt;
            <property name="jobDetail" ref="queueMessageSenderJob"/>
            &lt;!&ndash; 10 seconds &ndash;&gt;
            <property name="startDelay" value="10000"/>
            &lt;!&ndash; repeat every 20 seconds &ndash;&gt;
            <property name="repeatInterval" value="20000"/>
        </bean>

        <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                    <ref bean="queueMessageSenderJobTrigger"/>
                </list>
            </property>
        </bean>-->

</beans>