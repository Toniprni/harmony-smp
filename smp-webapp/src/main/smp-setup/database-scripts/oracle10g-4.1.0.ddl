--
-- Copyright 2018 European Commission | CEF eDelivery
--
-- Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by the European Commission - subsequent versions of the EUPL (the Licence);
-- You may not use this work except in compliance with the Licence.
--
-- You may obtain a copy of the Licence attached in file: LICENCE-EUPL-v1.2.pdf
--
-- Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an AS IS basis,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the Licence for the specific language governing permissions and limitations under the Licence.


/************************************************
* CREATE TABLES
************************************************/
CREATE TABLE SMP_CONFIGURATION  (
  PROPERTY VARCHAR2(255 BYTE) NOT NULL ENABLE,
	VALUE VARCHAR2(4000 BYTE),
	DESCRIPTION VARCHAR2(4000 BYTE),
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	CONSTRAINT SMP_CONFIGURATION_PKEY PRIMARY KEY (PROPERTY)
);

CREATE TABLE SMP_DOMAIN  (
  ID NUMBER(*,0) NOT NULL ENABLE,
	DOMAIN_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE,
	SML_SUBDOMAIN VARCHAR2(255 BYTE) NOT NULL ENABLE,
	SML_SMP_ID VARCHAR2(255 BYTE),
	SML_PARTC_IDENT_REGEXP VARCHAR2(1024 BYTE),
	SML_CLIENT_CERT_HEADER VARCHAR2(4000 BYTE),
	SML_CLIENT_KEY_ALIAS VARCHAR2(50 BYTE),
	SIGNATURE_KEY_ALIAS VARCHAR2(50 BYTE),
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
  CONSTRAINT SMP_DOMAIN_PKEY PRIMARY KEY (ID)
);

CREATE UNIQUE INDEX SMP_DOMAIN_CODE_IDX ON SMP_DOMAIN (DOMAIN_CODE);
CREATE UNIQUE INDEX SMP_DOMAIN_CODE_IDX ON SMP_DOMAIN (SML_SUBDOMAIN);

CREATE TABLE SMP_SERVICE_GROUP (
  ID NUMBER(*,0) NOT NULL ENABLE,
	FK_DOMAIN_ID NUMBER(*,0) NOT NULL ENABLE,
	PARTICIPANT_IDENTIFIER VARCHAR2(255 BYTE) NOT NULL ENABLE,
	PARTICIPANT_SCHEME VARCHAR2(255 BYTE),
	EXTENSION CLOB,
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	CONSTRAINT SMP_SERVICE_GROUP_PKEY PRIMARY KEY (ID),
	CONSTRAINT SMP_SG_DOMAIN_ID_FKEY FOREIGN KEY (FK_DOMAIN_ID) REFERENCES SMP_DOMAIN ( ID)
);
/**speedup search */
CREATE INDEX SMP_SG_PART_ID_IDX ON SMP_SERVICE_GROUP (PARTICIPANT_IDENTIFIER);
CREATE INDEX SMP_SG_PART_SCH_IDX ON SMP_SERVICE_GROUP (PARTICIPANT_SCHEME);
CREATE UNIQUE INDEX SMP_SG_UNIQ_PARTC_IDX ON SMP_SERVICE_GROUP (FK_DOMAIN_ID, PARTICIPANT_SCHEME, PARTICIPANT_IDENTIFIER);


CREATE TABLE SMP_SERVICE_METADATA (
  ID NUMBER(*,0) NOT NULL ENABLE,
	FK_SG_ID NUMBER(*,0) NOT NULL ENABLE,
	DOCUMENT_IDENTIFIER VARCHAR2(500 BYTE),
	DOCUMENT_SCHEME VARCHAR2(100 BYTE),
	XML_CONTENT CLOB,
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	CONSTRAINT SMP_SERVICE_METADATA_PKEY PRIMARY KEY (ID),
	CONSTRAINT MT_SG_ID_FKEY FOREIGN KEY (FK_SG_ID) REFERENCES SMP_SERVICE_GROUP (ID)
);

/**speedup searh */
CREATE INDEX SMP_MD_DOC_ID_IDX ON SMP_SERVICE_METADATA (DOCUMENT_IDENTIFIER);
CREATE INDEX SMP_MD_DOC_SCH_IDX ON SMP_SERVICE_METADATA (DOCUMENT_SCHEME);
CREATE UNIQUE INDEX SMP_MD_UNIQ_DOC_IDX ON SMP_SERVICE_METADATA (FK_SG_ID, DOCUMENT_SCHEME, DOCUMENT_IDENTIFIER);

CREATE TABLE SMP_CERTIFICATE (
  ID NUMBER(*,0) NOT NULL ENABLE,
	CERTIFICATE_ID VARCHAR2(255 BYTE) NOT NULL ENABLE,
	VALID_FROM DATE NOT NULL ENABLE,
	VALID_UNTIL DATE NOT NULL ENABLE,
	PEM_ENCODING CLOB,
	NEW_CERT_CHANGE_DATE DATE,
	NEW_CERT_ID NUMBER(*,0),
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	CONSTRAINT SMP_CERTIFICATE_PKEY PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX SMP_CERTIFICATE_ID_IDX ON SMP_CERTIFICATE (CERTIFICATE_ID);

CREATE TABLE SMP_USER (
  ID NUMBER(*,0) NOT NULL ENABLE,
	USERNAME VARCHAR2(256 BYTE) NOT NULL ENABLE,
	PASSWORD VARCHAR2(256 BYTE),
	FK_CERTIFICATE_ID NUMBER,
	ROLE VARCHAR2(20 BYTE) NOT NULL ENABLE,
	ACTIVE NUMBER(1,0) DEFAULT 1 NOT NULL,
	CREATED_ON DATE NOT NULL ENABLE,
	LAST_UPDATED_ON DATE NOT NULL ENABLE,
	CONSTRAINT SMP_USER_PKEY PRIMARY KEY (ID),
	CONSTRAINT USER_CERTIFICATE_ID_FKEY FOREIGN KEY (ID) REFERENCES SMP_CERTIFICATE (ID),
	CONSTRAINT CHECK_ACTIVE_VALUE CHECK (ACTIVE = 0 OR ACTIVE = 1)
);

CREATE UNIQUE INDEX SMP_USER_USERNAME_IDX ON SMP_USER (USERNAME);

CREATE TABLE SMP_OWNERSHIP (
	FK_USER_ID NUMBER(*,0) NOT NULL ENABLE,
	FK_SG_ID NUMBER(*,0) NOT NULL ENABLE,
	CONSTRAINT OWN_USER_SG_PKEY PRIMARY KEY (FK_USER_ID,FK_SG_ID )
);

/************************************************
* CREATE AUDIT TABLES
************************************************/
CREATE TABLE SMP_REV_INFO (
  ID NUMBER(38, 0) NOT NULL,
  TIMESTAMP NUMBER(38, 0),
  REVISION_DATE TIMESTAMP,
  USERNAME VARCHAR2(255),
  CONSTRAINT PK_SMP_REV_INFO PRIMARY KEY (ID)
);

CREATE TABLE SMP_CONFIGURATION_AUD  (
  PROPERTY VARCHAR2(255 BYTE) NOT NULL ENABLE,
	VALUE VARCHAR2(4000 BYTE),
	DESCRIPTION VARCHAR2(4000 BYTE),
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
	CONSTRAINT SMP_CONFIGURATION_AUD_PKEY PRIMARY KEY (PROPERTY,REV)
);

CREATE TABLE SMP_DOMAIN_AUD  (
  ID NUMBER(*,0) NOT NULL ENABLE,
	DOMAIN_CODE VARCHAR2(50 BYTE) NOT NULL ENABLE,
	SML_SUBDOMAIN VARCHAR2(255 BYTE),
	SML_SMP_ID VARCHAR2(255 BYTE),
	SML_PARTC_IDENT_REGEXP VARCHAR2(1025 BYTE),
	SML_CLIENT_CERT_HEADER VARCHAR2(4000 BYTE),
	SML_CLIENT_KEY_ALIAS VARCHAR2(50 BYTE),
	SIGNATURE_KEY_ALIAS VARCHAR2(50 BYTE),
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
  CONSTRAINT SMP_DOMAIN_AUD_PKEY PRIMARY KEY (ID,REV)
);


CREATE TABLE SMP_SERVICE_GROUP_AUD (
  ID NUMBER(*,0) NOT NULL ENABLE,
	FK_DOMAIN_ID NUMBER(*,0) NOT NULL ENABLE,
	PARTICIPANT_IDENTIFIER VARCHAR2(255 BYTE) NOT NULL ENABLE,
	PARTICIPANT_SCHEME VARCHAR2(255 BYTE),
	EXTENSION CLOB,
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
	CONSTRAINT SMP_SERVICE_GROUP_AUD_PKEY PRIMARY KEY (ID,REV)
);


CREATE TABLE SMP_SERVICE_METADATA_AUD(
  ID NUMBER(*,0) NOT NULL ENABLE,
	FK_SG_ID NUMBER(*,0) NOT NULL ENABLE,
	DOCUMENT_IDENTIFIER VARCHAR2(500 BYTE),
	DOCUMENT_SCHEME VARCHAR2(100 BYTE),
	XML_CONTENT CLOB,
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
	CONSTRAINT SMP_SERVICE_METADATA_AUD_PKEY PRIMARY KEY (ID,REV)
);

CREATE TABLE SMP_CERTIFICATE_AUD (
  ID NUMBER(*,0) NOT NULL ENABLE,
	CERTIFICATE_ID VARCHAR2(255 BYTE) NOT NULL ENABLE,
	VALID_FROM DATE NOT NULL ENABLE,
	VALID_UNTIL DATE NOT NULL ENABLE,
	PEM_ENCODING CLOB,
	NEW_CERT_CHANGE_DATE DATE,
	NEW_CERT_ID NUMBER(*,0),
	CREATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	LAST_UPDATED_ON DATE DEFAULT sysdate NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
	CONSTRAINT SMP_CERTIFICATE_AUD_PKEY PRIMARY KEY (ID,REV)
);

CREATE TABLE SMP_USER_AUD (
  ID NUMBER(*,0) NOT NULL ENABLE,
	USERNAME VARCHAR2(256 BYTE) NOT NULL ENABLE,
	PASSWORD VARCHAR2(256 BYTE),
	FK_CERTIFICATE_ID NUMBER,
	ROLE VARCHAR2(20 BYTE) NOT NULL ENABLE,
	ACTIVE NUMBER(1,0) DEFAULT 1 NOT NULL,
	CREATED_ON DATE NOT NULL ENABLE,
	LAST_UPDATED_ON DATE NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
	CONSTRAINT SMP_USER_AUD_PKEY PRIMARY KEY (ID,REV)
);

CREATE TABLE SMP_OWNERSHIP_AUD (
	FK_USER_ID NUMBER(*,0) NOT NULL ENABLE,
	FK_SG_ID NUMBER(*,0) NOT NULL ENABLE,
	REV INTEGER NOT NULL,
  REVTYPE NUMBER(3),
	CONSTRAINT OWN_USER_SG_AUD_PKEY PRIMARY KEY (FK_USER_ID,FK_SG_ID,REV )
);

CREATE SEQUENCE SMP_CONFIGURATION_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;
CREATE SEQUENCE SMP_DOMAIN_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;
CREATE SEQUENCE SMP_SERVICE_GROUP_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;
CREATE SEQUENCE SMP_SERVICE_METADATA_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;
CREATE SEQUENCE SMP_CERTIFICATE_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;
CREATE SEQUENCE SMP_USER_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;
CREATE SEQUENCE SMP_REV_SEQ START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;


commit;
